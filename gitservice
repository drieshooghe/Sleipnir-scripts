#!/bin/bash

### INCLUDE SOURCES ###
source "$SCRIPTDIR/src/load_script_sources" && load_script_sources;

### SET VARIABLES ###

	# Parameters
	     action="$1"
	     path="$2"
	     author="$3"
	     date="$4"

### PARAMETER CHECK ###
if [[ "${action}" != "status" ]] && [[ "${action}" != "pull" ]] && [[ "${action}" != "changes" ]] && [[ "${action}" != "log-since" ]] && [[ "${action}" != "log-on" ]]; then
        echo -e " ${err} An error occurred: please provide a valid action" && exit;
fi

if [[ ! -d "${path}" ]]; then
        echo -e " ${err} An error occurred: please provide a valid directory containing repositories as a parameter" && exit;
fi



### ENTER REPOROOT AND CHECK EACH REPO STATUS
if [[ "${action}" = "status" ]] || [[ "${action}" = "pull" ]]; then

	for D in ${path}/*; do

	    if [[ -d "${D}" && -d "${D}/.git" ]]; then

	        output=$(git --git-dir=${D}/.git --work-tree=${D} ${action});

	        echo -e "${bold_on}${lblue_f}${dbarrow}${lcyan_f} $(basename ${D}) ${ra}";

		if [[ ${output} == *"Your branch is ahead of"* ]]; then

	        	echo -e "${lgreen_f} ${output} ${ra}";

		elif [[ ${output} == *"Your branch is behind"* ]];then

			echo -e "${red_f} ${output} ${ra}"

		elif [[ ${output} == *"Changes"* ]]; then

		        echo -e "${output}";

		else

			echo -e "${dgrey_f} ${output} ${ra}";

		fi

	        ${nl};
	    fi
	done

fi
if [[ "${action}" = "changes" ]]; then

        for D in ${path}/*; do
            if [[ -d "${D}" && -d "${D}/.git" ]]; then
		output=$(git --git-dir=${D}/.git --work-tree=${D} status);
		if [[ ${output} == *"Changes"* ]]; then
			echo -e "${bold_on}${lblue_f}${dbarrow}${lcyan_f} $(basename ${D}) ${ra}";
			echo -e "${output}";
		fi
            fi

        done

fi

if [[ "${action}" = "log-since" ]]; then

	if [ -z ${date} ]; then
		date=$(date -dlast-monday +%Y-%m-%d);
	fi

        for D in ${path}/*; do
            if [[ -d "${D}" && -d "${D}/.git" ]]; then
                output=$(git --git-dir=${D}/.git --work-tree=${D} log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --after="${date}" --author=${author});
			if [[ ! -z ${output}  ]]; then
	                        echo -e "${bold_on}${lblue_f}${dbarrow}${lcyan_f} $(basename ${D}) ${ra}";
	                        echo -e "${output}";
	                        ${nl};
			fi
            fi
        done

fi

if [[ "${action}" = "log-on" ]]; then

        if [ -z ${date} ]; then
                date=$(date +%Y-%m-%d);
        fi

        for D in ${path}/*; do
            if [[ -d "${D}" && -d "${D}/.git" ]]; then
                output=$(git --git-dir=${D}/.git --work-tree=${D} log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --after="${date} 00:00" --before="${date} 23:59"  --author=${author});
                        if [[ ! -z ${output}  ]]; then
				echo -e "${bold_on}${lblue_f}${dbarrow}${lcyan_f} $(basename ${D}) ${ra}";
	                        echo -e "${output}";
	                        ${nl};
			fi
            fi
        done

fi
